/*
 * Parts are from the Team-Assembly XKUtils thx.
 *
 */

#ifndef _BootEEPROM_H_
#define _BootEEPROM_H_

#include "VideoInitialization.h"
//Defines for Data structure sizes..
#define EEPROM_SIZE        0x100
#define CONFOUNDER_SIZE        0x008
#define HDDKEY_SIZE        0x010
#define XBEREGION_SIZE        0x001
#define SERIALNUMBER_SIZE    0x00C
#define MACADDRESS_SIZE        0x006
#define ONLINEKEY_SIZE        0x010
#define DVDREGION_SIZE        0x001
#define VIDEOSTANDARD_SIZE    0x004

//EEPROM Data struct value enum
typedef enum { 
    ZONE_NONE = 0x00,    //Region Clear
    ZONE1 = 0x01,        //USA
    ZONE2 = 0x02,        //Europe
    ZONE3 = 0x03,        //India
    ZONE4 = 0x04,        //Australia
    ZONE5 = 0x05,        //USSR
    ZONE6 = 0x06,        //China
    ZONE_FREE = 0x07,    //Free
    ZONE_AIRLINES = 0x08//Airlines
} DVD_ZONE;

typedef enum {
    VID_INVALID    = 0x00000000,
    NTSC_M        = 0x00400100,
    NTSC_J        = 0x00400200, 
    PAL_I        = 0x00800300
} VIDEO_STANDARD;

typedef enum {
    XBE_INVALID = 0x00,
    NORTH_AMERICA = 0x01,
    JAPAN = 0x02,
    EURO_AUSTRALIA = 0x04
} XBE_REGION;

typedef enum {
    FULLSCREEN = 0x00,
    WIDESCREEN = 0x01,
    LETTERBOX = 0x10
} VID_FORMAT;

typedef enum {
    R720p = 0x02,
    R1080i = 0x04,
    R480p = 0x08
}VID_RESOLUTION;


//Structure that holds contents of 256 byte EEPROM image..
typedef struct _EEPROMDATA {
   u8        HMAC_SHA1_Hash[20];            // 0x00 - 0x13 HMAC_SHA1 Hash
   u8        Confounder[8];                // 0x14 - 0x1B RC4 Encrypted Confounder ??
   u8        HDDKkey[16];                // 0x1C - 0x2B RC4 Encrypted HDD key
   u8        XBERegion[4];                // 0x2C - 0x2F RC4 Encrypted Region code (0x01 North America, 0x02 Japan, 0x04 Europe)

   u8        Checksum2[4];                // 0x30 - 0x33 Checksum of next 44 bytes
   u8        SerialNumber[12];            // 0x34 - 0x3F Xbox serial number 
   u8        MACAddress[6];                // 0x40 - 0x45 Ethernet MAC address
   u8        UNKNOWN2[2];                    // 0x46 - 0x47  Unknown Padding ?

   u8        OnlineKey[16];                // 0x48 - 0x57 Online Key ?

   u8        VideoStandard[4];            // 0x58 - 0x5B  ** 0x00014000 = NTSC, 0x00038000 = PAL, 0x00400100 = NTSC_J

   u8        UNKNOWN3[4];                    // 0x5C - 0x5F  Unknown Padding ?
  
   //Comes configured up to here from factory..  everything after this can be zero'd out...
   //To reset XBOX to Factory settings, Make checksum3 0xFFFFFFFF and zero all data below (0x64-0xFF)
   //Doing this will Reset XBOX and upon startup will get Language & Setup screen...
   u8        Checksum3[4];                // 0x60 - 0x63  other Checksum of next  

   u8        TimeZoneBias[4];            // 0x64 - 0x67 Zone Bias?
   u8        TimeZoneStdName[4];            // 0x68 - 0x6B Standard timezone
   u8        TimeZoneDltName[4];            // 0x5C - 0x6F Daylight timezone
   u8        UNKNOWN4[8];                // 0x70 - 0x77 Unknown Padding ?
   u8        TimeZoneStdDate[4];                // 0x78 - 0x7B 10-05-00-02 (Month-Day-DayOfWeek-Hour) 
   u8        TimeZoneDltDate[4];                // 0x7C - 0x7F 04-01-00-02 (Month-Day-DayOfWeek-Hour) 
   u8        UNKNOWN5[8];                // 0x80 - 0x87 Unknown Padding ?
   u8        TimeZoneStdBias[4];            // 0x88 - 0x8B Standard Bias?
   u8        TimeZoneDltBias[4];            // 0x8C - 0x8F Daylight Bias?

   u8        LanguageID[4];                // 0x90 - 0x93 Language ID
  
   u8        VideoFlags[4];                // 0x94 - 0x97 Video Settings - 0x96 b0==widescreen 0x96 b4 == letterbox
   u8        AudioFlags[4];                // 0x98 - 0x9B Audio Settings
  
   u8        ParentalControlGames[4];        // 0x9C - 0x9F 0=MAX rating
   u8        ParentalControlPwd[4];            // 0xA0 - 0xA3 7=X, 8=Y, B=LTrigger, C=RTrigger
   u8        ParentalControlMovies[4];           // 0xA4 - 0xA7 0=Max rating
  
   u8        XBOXLiveIPAddress[4];            // 0xA8 - 0xAB XBOX Live IP Address..
   u8        XBOXLiveDNS[4];                // 0xAC - 0xAF XBOX Live DNS Server..
   u8        XBOXLiveGateWay[4];            // 0xB0 - 0xB3 XBOX Live Gateway Address..
   u8        XBOXLiveSubNetMask[4];            // 0xB4 - 0xB7 XBOX Live Subnet Mask..
   u8        OtherSettings[4];            // 0xA8 - 0xBB Other XBLive settings ?

   u8        DVDPlaybackKitZone[4];            // 0xBC - 0xBF DVD Playback Kit Zone

   u8        UNKNOWN6[64];                // 0xC0 - 0xFF Unknown Codes / Memory timing data ?
}__attribute__((packed)) EEPROMDATA;

EEPROMDATA eeprom;
EEPROMDATA *editeeprom;


//Generic 1.0 revision eeprom image. Thanks bunnie!
static const u8 EEPROMimg10[] = {
        0x47, 0x83, 0xa2, 0x7d, 0x6a, 0x69, 0x10, 0x8b, 0x2d, 0xb2, 0xe8, 0x90, 0xe1, 0x60, 0xde, 0xed,
        0x02, 0xc2, 0xaa, 0x79, 0x21, 0x47, 0xcd, 0xb0, 0xb7, 0xa8, 0x7a, 0x77, 0x44, 0x9c, 0x5e, 0x6e,
        0xd0, 0xf5, 0xf9, 0xe6, 0x94, 0x68, 0x39, 0xe0, 0xca, 0xa5, 0xd2, 0xe5, 0xfa, 0x02, 0xb9, 0xb7,
        0x9d, 0x19, 0xe6, 0xed, 0x36, 0x30, 0x35, 0x33, 0x37, 0x39, 0x35, 0x32, 0x31, 0x39, 0x30, 0x32,
        0x00, 0x50, 0xf2, 0x41, 0x9e, 0x5f, 0x00, 0x00, 0x2d, 0xaa, 0x6c, 0x23, 0x99, 0x80, 0x11, 0x47,
        0x33, 0xc3, 0xc7, 0x1a, 0x2b, 0xa5, 0x06, 0xb3, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x75, 0x61, 0x57, 0xfb, 0x2c, 0x01, 0x00, 0x00, 0x45, 0x53, 0x54, 0x00, 0x45, 0x44, 0x54, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x02, 0x04, 0x01, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xff, 0xff, 0xff,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//Generic 1.1 revision eeprom image. Credits to the guy(s) who made flashBios unauthorized builds.
static const u8 EEPROMimg11[] = {
        0xa1, 0xdb, 0x72, 0x43, 0x5c, 0x91, 0x5a, 0x76, 0xc5, 0xfb, 0xe7, 0xe5, 0x42, 0x25, 0x38, 0x51,
        0x02, 0x68, 0x24, 0xc5, 0x80, 0x58, 0x3f, 0x83, 0xa4, 0xb5, 0x14, 0x9e, 0xc7, 0xbb, 0x18, 0x3a,
        0xb3, 0x52, 0x39, 0x6d, 0xd7, 0xc4, 0x74, 0xb9, 0x03, 0x29, 0x3a, 0xa7, 0x8a, 0x09, 0x11, 0xeb,
        0xf8, 0x31, 0x33, 0x20, 0x34, 0x33, 0x31, 0x39, 0x31, 0x32, 0x31, 0x33, 0x32, 0x38, 0x30, 0x36,
        0x00, 0x0d, 0x3a, 0x00, 0x0f, 0x42, 0x00, 0x00, 0x93, 0x37, 0xb1, 0x05, 0x3a, 0xa6, 0x42, 0xa5,
        0x2c, 0xc8, 0x47, 0x0b, 0x67, 0x3a, 0x84, 0x86, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x75, 0x61, 0x57, 0xfb, 0x2c, 0x01, 0x00, 0x00, 0x45, 0x53, 0x54, 0x00, 0x45, 0x44, 0x54, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x02, 0x04, 0x01, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xff, 0xff, 0xff,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//Generic 1.2/1.3 revision eeprom image. Credits to the guy(s) who made flashBios unauthorized builds.
static const u8 EEPROMimg12[] = {
        0x8f, 0x1a, 0xbb, 0x35, 0x79, 0x0f, 0xfc, 0x16, 0xb8, 0xf2, 0x03, 0xbd, 0x0a, 0x26, 0xe4, 0x55,
        0x4f, 0x56, 0xec, 0x36, 0x7e, 0xf3, 0x4c, 0x9d, 0x92, 0x90, 0xb9, 0x8f, 0x42, 0x43, 0x05, 0x22,
        0xce, 0x47, 0xc7, 0xcb, 0x1b, 0x01, 0xd7, 0xfa, 0x36, 0x5a, 0x80, 0x1f, 0x42, 0xa6, 0xb4, 0xb4,
        0x11, 0x70, 0x31, 0x4d, 0x33, 0x34, 0x33, 0x30, 0x35, 0x39, 0x34, 0x33, 0x32, 0x39, 0x30, 0x36,
        0x00, 0x0d, 0x3a, 0x00, 0x59, 0x3e, 0x00, 0x00, 0x3c, 0xd5, 0xa7, 0x8a, 0xae, 0xfb, 0xc3, 0x00,
        0x4f, 0xeb, 0x6e, 0x2d, 0xc1, 0xe0, 0xe1, 0x5f, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x75, 0x61, 0x57, 0xfb, 0x2c, 0x01, 0x00, 0x00, 0x45, 0x53, 0x54, 0x00, 0x45, 0x44, 0x54, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x02, 0x04, 0x01, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xff, 0xff, 0xff,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//Generic 1.4/1.5 revision eeprom image. Credits to the guy(s) who made flashBios unauthorized builds.
static const u8 EEPROMimg14[] = {
        0xa2, 0xfe, 0x3b, 0x0a, 0xfc, 0xa8, 0x2e, 0x20, 0xce, 0x56, 0x2b, 0xa1, 0x26, 0xe3, 0x4f, 0x0d,
        0x9b, 0xb3, 0xce, 0xb5, 0xc5, 0xa8, 0x7a, 0x22, 0xee, 0xbc, 0x9c, 0x05, 0x5e, 0xec, 0x37, 0x82,
        0x42, 0x2b, 0xc2, 0x48, 0x62, 0xe8, 0x5e, 0x0d, 0xfe, 0x36, 0x4a, 0xfb, 0xe2, 0x3e, 0xb1, 0x89,
        0x4b, 0x24, 0x2b, 0x13, 0x33, 0x31, 0x32, 0x39, 0x36, 0x39, 0x35, 0x33, 0x33, 0x31, 0x30, 0x35,
        0x00, 0x50, 0xf2, 0xf7, 0xf5, 0xda, 0x00, 0x00, 0x98, 0x8f, 0x52, 0xf2, 0xa2, 0x68, 0x15, 0x0b,
        0x81, 0x7b, 0xb1, 0x52, 0x66, 0xa0, 0xf0, 0x02, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x3d, 0x61, 0x57, 0xfb, 0x68, 0x01, 0x00, 0x00, 0x43, 0x53, 0x54, 0x00, 0x43, 0x44, 0x54, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x02, 0x04, 0x01, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xff, 0xff, 0xff,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//Generic 1.6/1.6b revision eeprom image. Credits to the guy(s) who made flashBios unauthorized builds.
static const u8 EEPROMimg16[] = {
        0x0a, 0x3e, 0xd2, 0x7c, 0xb4, 0x8e, 0x6f, 0x94, 0x76, 0x43, 0x70, 0x12, 0x21, 0x32, 0x33, 0x6d,
        0x8a, 0xd3, 0x5d, 0x76, 0x17, 0x85, 0xde, 0xe2, 0x8a, 0xc6, 0x26, 0xd0, 0x3c, 0x7c, 0x43, 0x41,
        0xf6, 0x98, 0xe8, 0xd6, 0xfd, 0xf9, 0x75, 0xe2, 0x77, 0x53, 0x7d, 0xe5, 0xea, 0xb0, 0x29, 0x2e,
        0x19, 0xb9, 0x49, 0x57, 0x36, 0x30, 0x36, 0x30, 0x32, 0x35, 0x32, 0x34, 0x32, 0x32, 0x30, 0x35,
        0x00, 0x0d, 0x3a, 0x5e, 0xb9, 0x86, 0x00, 0x00, 0x0c, 0x32, 0x50, 0x3b, 0x51, 0x04, 0x0e, 0x72,
        0xea, 0xf5, 0x00, 0x20, 0x4a, 0xee, 0x43, 0xe3, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x6b, 0x61, 0x57, 0xfb, 0x2c, 0x01, 0x00, 0x00, 0x45, 0x53, 0x54, 0x00, 0x45, 0x44, 0x54, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x05, 0x00, 0x02, 0x04, 0x01, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0xff, 0xff, 0xff,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x68, 0xaa, 0xdd, 0x02, 0x46, 0x45, 0x8f, 0x8f, 0x78, 0x56, 0xbb, 0x69, 0x01, 0x04, 0x46, 0x45,
        0x8f, 0x8f, 0x78, 0x56, 0xbb, 0x69, 0x01, 0x04, 0x46, 0x45, 0x8f, 0x8f, 0x78, 0x56, 0xbb, 0x69,
        0x12, 0x03, 0x46, 0x45, 0x8f, 0x8f, 0x78, 0x56, 0xbb, 0x69, 0x02, 0x02, 0x46, 0x45, 0x8f, 0x8f,
        0x78, 0x56, 0xbb, 0x69, 0x12, 0x02, 0x7a, 0x9d, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void BootEepromReadEntireEEPROM(void);
void BootEepromReloadEEPROM(EEPROMDATA * realeeprom);
void BootEepromCompareAndWriteEEPROM(EEPROMDATA * realeeprom);
void BootEepromPrintInfo(void);
void BootEepromWriteEntireEEPROM(void);
void EepromCRC(unsigned char *crc, unsigned char *data, long dataLen);
void EepromSetVideoStandard(VIDEO_STANDARD standard);
void EepromSetWidescreen(int enable);

void assertWriteEEPROM(void);
void changeDVDRegion(u8 value);
int getGameRegionValue(void);
int setGameRegionValue(u8 value);
#endif // _BootEEPROM_H_
